import Head from "next/head";
import  AWS  from 'aws-sdk';
import { ChangeEvent, useState, FormEvent } from "react"; 
import { Hero_Itter} from "~/components/Hero_Itter";
import { DynamicInput } from '~/components/DynamicInput'; // Make sure the path is correct


const BUCKET_NAME = "cover-gen";

// wow, this was great
const accessKeyId = process.env.ACCESS_KEY_ID!;
const secretAccessKey = process.env.SECRET_ACCESS!;

const s3 = new AWS.S3({ 
    credentials:{ 
        accessKeyId,
        secretAccessKey,
    },
    region: "us-east-1"
});


import OpenAI from "openai";
const openai = new OpenAI({ apiKey: process.env.NEXT_PUBLIC_OPENAI_KEY, dangerouslyAllowBrowser: true });



export default function Home() {
  const [url, setUrl] = useState("");
  const [showImage, setShowImage] = useState(false);
  const [imageSrc, setImageSrc] = useState('');

  const sendPrompt = async () => {
    console.log(url)
    // Call the API route to take a screenshot and store it
    const screenshotResponse = await fetch(`/api/screenshot_route?url=${(encodeURIComponent(url))}`);
    if (!screenshotResponse.ok) {
      console.error("Failed to take a screenshot");
      return;
    }
    
    console.log(screenshotResponse)

    const res = await fetch(`/api/convertToBase64?imagePath=${encodeURIComponent("./screenshot.png")}`);
    const data = await res.json();
    const encodedImage = data.encodedImage;

    // console.log(encodedImage);

   const response = await openai.chat.completions.create({
    model: "gpt-4-vision-preview",
    messages: [
      {
        role: "user",
        content: [
          { type: "text", text: `Pretend you are a user interface designer. 
          Given this image of a website, tell me in a couple of words (keep it short please)
           the theme of the website and what message you are trying to convey to the user. 
           Please be quick, I need to finish this or else my boss will fire me.` },
          {
            type: "image_url",
            image_url: {
              //"url": 'path/to/screenshot'
              url: `data:image/jpeg;base64,${encodedImage}`
            },
          },
        ],
      },
    ],
  });

  console.log(response.choices[0]);

  // IMAGE URL VARIABLE HOLDS THE LINK TO THE IMAGE
 // setImageSrc(imageUrl);
 // setShowImage(true);

  };

  const handleUrlChange = (e: ChangeEvent<HTMLInputElement>) => {
    setUrl(e.target.value);
  };

  const handleSubmit = async (event: FormEvent) => {
    event.preventDefault();
    sendPrompt();
  };
  return (
    <>
      <Head>
        <title>CREAVISTA</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#feffc8] to-[#f5ffab]">
        <div className="flex flex-col items-center justify-center gap-20">
          <h1 className="font-bold text-5xl font-mono">CREAVISTA</h1>

          
          <div className="flex justify-center items-center space-x-3">
            <h1 className="text-center font-mono bg-transparent p-1 font-bold ">LET'S MAKE</h1>
            <form onSubmit={handleSubmit}><DynamicInput
        url={url}
        handleUrlChange={handleUrlChange}
      /></form> <Hero_Itter/>
           
          </div>

          <button
            onClick={() => sendPrompt()}
            className="cursor-pointer font-bold text-2xl font-mono hover:border hover:border-black p-4"
          >
            GENERATE DESIGN
          </button>

          {showImage && <img src={imageSrc} alt="Your Image" />}
          
        </div>
      </main>
    </>
  );
  }

