import Head from "next/head";
import { ChangeEvent, useState } from "react"; // Import useState and ChangeEvent hooks
import OpenAI from "openai";

const openai = new OpenAI({ apiKey: process.env.NEXT_PUBLIC_OPENAI_KEY, dangerouslyAllowBrowser: true });

export default function Home() {
  const [url, setUrl] = useState("");

  const sendPrompt = async () => {
    console.log(url)
    // Call the API route to take a screenshot and store it
    const screenshotResponse = await fetch(`/api/screenshot_route?url=${(encodeURIComponent(url))}`);
    if (!screenshotResponse.ok) {
      console.error("Failed to take a screenshot");
      return;
    }
    
    // Assuming the API returns the path or URL of the saved screenshot
    const screenshotData = await screenshotResponse.json();
    const screenshotUrl = screenshotData.screenshotUrl; // Adjust according to the actual API response

   const response = await openai.chat.completions.create({
    model: "gpt-4-vision-preview",
    messages: [
      {
        role: "user",
        content: [
          { type: "text", text: `Pretend you are a user interface designer. 
          Given this image of a website, tell me in a couple of words (keep it short please)
           the theme of the website and what message you are trying to convey to the user. 
           Please be quick, I need to finish this or else my boss will fire me.` },
          {
            type: "image_url",
            image_url: {
              //"url": 'path/to/screenshot'
              "url": "https://upload.wikimedia.org/wikipedia/commons/thumb/d/dd/Gfp-wisconsin-madison-the-nature-boardwalk.jpg/2560px-Gfp-wisconsin-madison-the-nature-boardwalk.jpg",
            },
          },
        ],
      },
    ],
  });

  console.log(response.choices[0]);
  // contains website design language and themes

  // send newPrompt to another api call that is text to image
  // display the response for this on the screen.

  };

  const handleUrlChange = (e: ChangeEvent<HTMLInputElement>) => {
    setUrl(e.target.value);
  };

  return (
    <>
      <Head>
        <title>CREAVISTA</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#feffc8] to-[#f5ffab]">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">

        <h1 className="font-bold text-5xl font-mono">CREAVISTA</h1>
        <input
          className="text-center font-mono bg-transparent hover:border hover:border-black p-4"
          type="url"
          placeholder="URL"
          value={url}
          onChange={handleUrlChange}
          />


        <button
            onClick={() => sendPrompt()}
            className="cursor-pointer font-bold text-2xl font-mono hover:border hover:border-black p-4"
          >
            GENERATE DESIGN
          </button>
          <div className="grid grid-cols-1 gap-4 sm:grid-cols-2 md:gap-8">
          </div>
        </div>
      </main>
    </>
  );
}
